#!/usr/bin/env node
/**
 * Import Mercedes parts and procedures to Supabase
 */

import { createClient } from '@supabase/supabase-js';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Supabase connection
const supabaseUrl = 'https://ydevatqwkoccxhtejdor.supabase.co';
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY || process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseKey) {
  console.error('❌ Error: SUPABASE_SERVICE_ROLE_KEY not found in environment');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function importData() {
  console.log('='

.repeat(60));
  console.log('MERCEDES PARTS IMPORT TO SUPABASE');
  console.log('='.repeat(60));
  
  // Read JSON data
  const dataFile = '/Volumes/UnimogManuals/MERCEDES-PARTS-FINAL/mercedes_parts_final.json';
  
  if (!fs.existsSync(dataFile)) {
    console.error(`❌ Data file not found: ${dataFile}`);
    return;
  }
  
  const data = JSON.parse(fs.readFileSync(dataFile, 'utf8'));
  
  console.log(`\n📦 Found ${data.parts.length} parts to import`);
  console.log(`🔧 Found ${data.procedures.length} procedures to import`);
  
  // Import parts
  console.log('\nImporting parts...');
  let partsImported = 0;
  
  for (const part of data.parts) {
    try {
      const { error } = await supabase
        .from('wis_parts')
        .upsert({
          part_number: part.part_number,
          description: part.description || '',
          search_vector: null // Will be generated by database trigger
        }, {
          onConflict: 'part_number'
        });
        
      if (error) {
        console.error(`  Error importing ${part.part_number}:`, error.message);
      } else {
        partsImported++;
        if (partsImported % 10 === 0) {
          console.log(`  Imported ${partsImported} parts...`);
        }
      }
    } catch (err) {
      console.error(`  Error processing ${part.part_number}:`, err.message);
    }
  }
  
  console.log(`✅ Imported ${partsImported} parts`);
  
  // Import procedures (limit to first 1000)
  console.log('\nImporting procedures...');
  let procsImported = 0;
  const proceduresToImport = data.procedures.slice(0, 1000);
  
  for (const proc of proceduresToImport) {
    try {
      // Create title from procedure content
      const title = proc.substring(0, 100);
      
      const { error } = await supabase
        .from('wis_procedures')
        .insert({
          title: title,
          content: proc,
          procedure_type: 'repair',
          search_vector: null // Will be generated by database trigger
        });
        
      if (error && !error.message.includes('duplicate')) {
        console.error(`  Error importing procedure:`, error.message);
      } else {
        procsImported++;
        if (procsImported % 100 === 0) {
          console.log(`  Imported ${procsImported} procedures...`);
        }
      }
    } catch (err) {
      console.error(`  Error processing procedure:`, err.message);
    }
  }
  
  console.log(`✅ Imported ${procsImported} procedures`);
  
  // Verify import
  console.log('\nVerifying import...');
  
  const { count: partCount } = await supabase
    .from('wis_parts')
    .select('*', { count: 'exact', head: true });
    
  const { count: procCount } = await supabase
    .from('wis_procedures')
    .select('*', { count: 'exact', head: true });
    
  console.log(`\n📊 Database now contains:`);
  console.log(`  • ${partCount} parts`);
  console.log(`  • ${procCount} procedures`);
  
  // Show sample parts
  const { data: sampleParts } = await supabase
    .from('wis_parts')
    .select('part_number, description')
    .limit(10)
    .order('created_at', { ascending: false });
    
  if (sampleParts && sampleParts.length > 0) {
    console.log('\n📦 Recently added parts:');
    for (const part of sampleParts) {
      console.log(`  ${part.part_number}: ${part.description || '(no description)'}`);
    }
  }
  
  console.log('\n' + '='.repeat(60));
  console.log('🎉 IMPORT COMPLETE!');
  console.log('='.repeat(60));
  console.log('Your community can now access Mercedes parts at:');
  console.log('http://localhost:5173/knowledge/wis-epc');
}

// Run import
importData().catch(console.error);